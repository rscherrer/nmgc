#' Classification histograms
#'
#' Custom function to plot the results of a classification analysis across multiple machines
#'
#' @param accudata A data frame with accuracy scores across machines and optional groups. The accuracy column must be names "accuracy"
#' @param nulldata A data frame with the densities of a null distribution at different accuracies. Must have columns "accuracy", "density" and "forlegend" (This one contains a single value, the label to add to the density line in the legend).
#' @param pdata A data frame with P-values to show for each facet. The P-value column must be named "pvalue".
#' @param cmdata A data frame with the frequency of assignments for each predicted and true groups (confusion matrix in the long format). There must be at least columns "true", "predicted" and "freq".
#' @param color Color of the histograms
#' @param dheight Multiplier to adjust the height of the null density line
#' @param bins Number of bins
#' @param facets Variable giving the facets to split by. Defaults to NULL, i.e. no facets
#' @param ymax Highest point on the plot
#' @param inset_xmin,inset_xmax,inset_ymin,inset_ymax Coordinates of the inset plots
#' @param rounding Lower limit for P-values
#' @param signif Significance threshold
#'
#' @return A (facetted) plot
#'
#' @export

plot_classification_histogram <- function(
  accudata,
  nulldata = NULL,
  pdata = NULL,
  cmdata = NULL,
  color = "seagreen",
  dheight = 500,
  bins = 20,
  facets = NULL,
  ymax = 250,
  inset_xmin = 0,
  inset_xmax = 0.25,
  inset_ymin = 170,
  inset_ymax = 250,
  rounding = 4,
  signif = 0.05
) {

  library(tidyverse)

  p <- ggplot(accudata, aes(x = accuracy)) +
    geom_histogram(alpha = 0.5, bins = bins, fill = color) +
    theme_bw() +
    theme(panel.grid = element_blank()) +
    xlab("Generalization accuracy") +
    ylab("Count") +
    xlim(c(0, 1)) +
    ylim(c(0, ymax))

  # Add null distribution if needed
  if (!is.null(nulldata)) {
    nulldata$forlegend <- "Null expectation"
    p <- p + geom_line(data = nulldata, aes(x = accuracy, y = density * dheight, lty = forlegend, fill = NULL)) +
      labs(lty = "", fill = "") +
      scale_linetype_manual(values = 2) +
      theme(legend.position = "top")
  }

  # Add binomial P-values to the plot
  if (!is.null(pdata)) {
    pdata$plabel <- paste("P =", round(pdata$pvalue, rounding))
    plower <- 1/10^rounding
    pdata$plabel[pdata$pvalue < plower] <- paste("P <", plower)
    pdata <- pdata %>% mutate(plabel = ifelse(pvalue < signif, gsub("$", "*", plabel), plabel))
    p <- p + geom_text(data = pdata, aes(label = plabel, fill = NULL), x = 1, y = ymax, hjust = 1, vjust = 1)
  }

  # Add inset confusion matrices if needed
  if (!is.null(cmdata)) {
    cmdata$accuracy <- 1
    p <- p +
      plot_insets(
        cmdata,
        plotfun = function(x) plot_confusion_matrix(x, facets = NULL, void = TRUE),
        xmin = inset_xmin,
        xmax = inset_xmax,
        ymin = inset_ymin,
        ymax = inset_ymax,
        facets = facets
      )
  }

  if (!is.null(facets)) p <- p + facet_wrap(. ~ get(facets))

  return (p)

}
